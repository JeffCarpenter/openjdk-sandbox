MSG_Help_common=Usage: jpackager <mode> <options>\n\
\n\
where mode is one of: \n\
\  create-image\n\
\          Generates a platform-specific application image.\n\
\  create-installer <type>\n\
\          Generates a platform-specific installer for the application.\n\
\          Valid values for "type" are "msi", "rpm", "deb", "dmg", \u201cpkg\u201d,\n\
\          \u201cpkg-app-store\u201d. If "type" is omitted, all supported types of installable\n\
\          packages for current platform will be generated.\n\
\  create-jre-installer <type>\n\
\          Generates a platform-specific installer for Server JRE.\n\
\          Valid values for "type" are "msi", "rpm", "deb", "dmg", \u201cpkg\u201d.\n\
\          If "type" is omitted, all supported types of installable packages\n\
\          for current platform will be generated.\n\
\          \n\
Sample usages:\n\
--------------\n\
jpackager create-image --input inputdir --output outputdir --name AppName --class package.ClassName\n\
or\n\
jpackager create-image -i inputdir -o outputdir -n AppName -c package.ClassName\n\
Generates an application image.\n\
\n\
jpackager create-installer -i inputdir -o outputdir -n "App Name" -c package.ClassName\n\
Generates an application installer.\n\
\n\
jpackager create-jre-installer -n <jre_name> -o outputdir\n\
Generates a Server JRE installer.\n\
\n\
The following options are valid for all platforms:\n\
\  --help -i \n\
\          Shows the usage text, followed by a list and description of each valid option for the current platform and the given mode.\n\
\          If no mode is given, shows the usage text, followed by a list and description of each valid option for the current platform.\n\
\          When this option is used, all other options are ignored.\n\
\  --output -o\n\
\          Name of the directory where generated output file is placed.\n\
\  --input -i\n\
\          Name of the base directory that contains the files to package.\n\
\  --files -f\n\
\          List of files in the base directory. If omitted, all files from "input"\n\
\          directory (which is a mandatory argument in this case) will be packaged.\n\
\  --name -n\n\
\          Name of the application.\n\
\  --main-jar -j\n\
\          The main JAR of the application. This JAR should have the main-class,\n\
\          and is relative to the assembled application directory.\n\
\  --class -c\n\
\          Qualified name of the application class to execute.\n\
\  --version -v\n\
\          Version of the application.\n\
\  --arguments -a\n\
\          Command line arguments to pass to the main class if no arguments\n\
\          are specified by the launcher.\n\
\  --icon\n\
\          Icon of the application bundle.\n\
\  --singleton\n\
\          Prevents multiple instances of the application from launching\n\
\          (see SingleInstanceService API for more details).\n\
\  --identifier\n\
\          Machine readable identifier of the application. The format\n\
\          must be a DNS name in reverse order, such as com.example.myapplication.\n\
\          The identifier is used for composing Single Instance unique id and\n\
\          calculating preferences node to search for User JVM Options\n\
\          (the format is a slash delimited version of the main package name,\n\
\          such as "com/example/myapplication"), see UserJvmOptionsService API\n\
\          for more details.\n\
\  --verbose\n\
\          Enables verbose output.\n\
\  --strip-native-commands\n\
\          Removes native executables from the custom run-time images.\n\
\  --jvm-args\n\
\          JVM flags and options to pass to the application.\n\
\  --file-associations\n\
\          Properties file that contains list of key=value parameters that\n\
\          describe a file association. "extension", "mime-type", "icon",\n\
\          "description" can be used as keys for the association.\n\
\  --secondary-launcher\n\
\          Properties file that contains a collection of options for a secondary launcher.\n\
\  --build-root\n\
\          Directory in which to use and place temporary files.\n\
\  --runtime-image\n\
\          Location of the predefined runtime image that is used to build\n\
\          an application image and installable package.\n\
\  --app-image\n\
\          Location of the predefined application image that is used to build\n\
\          an installable package.\n\
\  --install-dir\n\
\          Installation directory of the application. Ignored on Windows, use\n\
\          \u2013-win-dir-chooser to provide an ability to choose an installation directory.\n\
\  --echo-mode\n\
\          Outputs (without executing) native packaging commands so that users\n\
\          can use this as a starting point for addressing more complex needs.\n\
\  --license-file\n\
\          The license file, relative to the base directory.\n\
\  --copyright\n\
\          Copyright for the application.\n\
\  --description\n\
\          Description of the application.\n\
\  --category\n\
\          Category or group of the application.\n\
\  --vendor\n\
\          Vendor of the application.\n\
\n\
Modular options:\n\
\  --module -m\n\
\          Main module of the application. This module must have the main-class,\n\
\          and be on the module path.\n\
\  --module-path -p\n\
\          When packaging the Java Runtime, this is the path JLink looks in for modules.\n\
\  --add-modules\n\
\          List of modules to add to JImage creation, including possible services.\n\
\  --limit-modules\n\
\          Modules to limit JImage creation to.\n\

MSG_Help_mac=\nThe following options are valid for Mac OS X platforms:\n\
\  --mac-sign\n\
\          Request that the bundle be signed.\n\
\  --mac-bundle-name\n\
\          Name of the application as it appears in the Menu Bar. This can be\n\
\          different from the application name. This name must be less than 16\n\
\          characters long and be suitable for displaying in the menu bar and\n\
\          the application Info window.\n\
\  --mac-bundle-identifier\n\
\          An identifier that uniquely identifies the application for MacOSX\n\
\          (and on the Mac App Store).  May only use alphanumeric (A-Z,a-z,0-9),\n\
\          hyphen (-), and period (.) characters.\n\
\  --mac-app-store-category\n\
\          Mac App Store Categories. Note that the key is the string shown to\n\
\          the user and the value is the ID of the category.\n\
\  --mac-app-store-entitlements\n\
\          File location of a custom mac app store entitlements file.\n\
\  --mac-bundle-signing-prefix\n\
\          When signing the application bundle, this value is prefixed to all\n\
\          components that need to be signed that don't have an existing bundle identifier.\n\
\  --mac-signing-key-user-name\n\
\          User name portion of the typical "Mac Developer ID Application: <user name>" signing key.\n\
\  --mac-signing-keychain\n\
\          Location of the keychain to use. If not specified, the standard keychains are used.\n\

MSG_Help_linux=\nThe following options are valid for Linux platforms:\n\
\  --linux-bundle-name\n\
\          Name for Linux bundle.\n\
\  --linux-package-deps\n\
\          Required packages or capabilities for the application.\n\
\  --linux-rpm-license-type\n\
\          Type of the license ("License: <value>" of the RPM .spec).\n\
\  --linux-deb-maintainer\n\
\          Maintainer for .deb bundle.\n\

MSG_Help_win=\nThe following options are valid for Windows platforms:\n\
\  --win-menu\n\
\          Adds the application to the system menu.\n\
\  --win-menu-group\n\
\          Start Menu group this application is placed in.\n\
\  --win-per-user-install\n\
\          Request to perform an install on a per-user basis.\n\
\  --win-dir-chooser\n\
\          Adds a dialog to enable the user to choose a directory in which\n\
\          the product is installed.\n\
\  --win-registry-name\n\
\          Name of the application for registry references. Default is\n\
\          the Application Name with only alphanumerics, dots, and dashes (no whitespace).\n\
\  --win-upgrade-uuid\n\
\          UUID associated with upgrades for this package.\n\
\  --win-shortcut\n\
\          Creates a desktop shortcut for the application.\n\
